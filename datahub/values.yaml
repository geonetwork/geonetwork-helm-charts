replicaCount: 1

image:
  # Check the official image tags to see which is one you need
  # https://hub.docker.com/r/geonetwork/geonetwork-ui-datahub/tags
  repository: geonetwork/geonetwork-ui-datahub
  tag: 2.6.2
  pullPolicy: IfNotPresent

configuration:
  image:
    repository: alpine/git
    tag: 2.49.1
  # The directory name is the directory from the root of the git repository
  # If the datahub config is located in the /conf directory then write conf
  # in config_directory_override.
  override_directories:
    config_directory_override: "conf"
    assets_directory_override: "assets"
  git:
    url: {}
    ref: {}
    ssh_secret: {}

ingress:
  enabled: true
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mydatahub.org
      paths:
        - "/datahub"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - mydatahub.org

  # define a custom incressClassName, like "traefik" or "nginx"
  className: ""

extra_environment: []
  # - name: GN4_API_URL
  #   value: "https://gn4.custom/geonetwork/srv/api"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  annotations: {}

#lifecycle:
#  postStart:
#    exec:
#      command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
#  preStop:
#    exec:
#      command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi


nodeSelector: {}

tolerations: []

affinity: {}