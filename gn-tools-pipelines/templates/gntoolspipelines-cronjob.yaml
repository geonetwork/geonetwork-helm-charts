apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "gn-tools-pipelines.fullname" . }}
  labels:
    {{ include "gn-tools-pipelines.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.job.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.job.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: init
            image: curlimages/curl:latest
            command: 
            - 'sh'
            - '-c'
            - |
              while [ `curl -Lk --write-out "%{http_code}\n" --silent --output /dev/null {{- if and .Values.config.elasticsearch.username .Values.config.elasticsearch.password }} --user "{{ .Values.config.elasticsearch.username }}:{{ .Values.config.elasticsearch.password }}"{{- end }} "{{ .Values.config.elasticsearch.host }}/{{ .Values.config.elasticsearch.index }}"` -ne 200 ]; do sleep 2; done
          containers:
          - name: {{ include "gn-tools-pipelines.fullname" . }}
            image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.job.image.pullPolicy }}
            env:
              - name: ES_HOST
                value: {{ .Values.config.elasticsearch.host | required ".Values.config.elasticsearch.host is required." }}
              - name: ES_USERNAME
                value: {{ .Values.config.elasticsearch.username | quote }}
              - name: ES_PASSWORD
                value: {{ .Values.config.elasticsearch.password | quote }}
              - name: RECORDS_INDEX
                value: {{ .Values.config.elasticsearch.index | required ".Values.config.elasticsearch.index is required." }}
          restartPolicy: Never
          {{- with .Values.job.tolerations }}
          tolerations:
            {{-  toYaml . | nindent 10 }}
          {{- end }}
